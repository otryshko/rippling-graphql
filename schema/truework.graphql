type Query {
  """
  Truework: return information about an employee for loan validation
  """
  employeeBySsn(ssn: String!): Employee
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Company {
  """
  Relay-compable company id
  """
  id: ID!

  """
  Public company name
  """
  name: String

  """
  A list of Employer Identification Numbers registered by the company
  """
  taxInfos: [CompanyTaxInfo!]!
  status: CompanyStatus

  """
  Company work address
  """
  address: Address
}

enum CompanyStatus {
  ACTIVE
  DEACTIVATION_REQUESTED
  INACTIVE
}

enum EmploymentType {
  CONTRACTOR
  SALARIED_FT
  SALARIED_PT
  HOURLY_FT
  HOURLY_PT
  TEMP
}

type Employee implements Node {
  """
  Relay-compable employee id
  """
  id: ID!

  """
  Goverment ID of the person
  """
  ssn: String
  fullName: String
  firstName: String
  lastName: String

  """
  Date of birth
  """
  dob: String
  email: String
  phone: String
  homeAddress: Address

  """
  An array of employment positions
  """
  roles: [Role!]

  """
  Has an employee consented to share employment history with Truework
  """
  consent: EmployeeConsent
}

"""
Payroll-related section of a role
"""
type RolePayroll {
  """
  Yearly compensation for the last 3 years
  """
  last3Years: [YearlyCompensation]

  """
  Paystubs for the year-to-date
  """
  paystubs: [Paystub]
}

"""
Yearly compensation
"""
type YearlyCompensation {
  year: Int!
  compensation: PayrollCompensation
}

scalar DateTime

scalar Date

type EmployeeConsent {
  state: ConsentState
  pendingStartedAt: DateTime
}

"""
Employment position
"""
type Role implements Node {
  id: ID!

  """
  Employment at this company
  """
  company: Company
  employee: Employee

  """
  Payroll info related to this company and this employee
  """
  payroll: RolePayroll
  startDate: Date
  endDate: Date

  """
  Is employee still active, see RoleState enum for reference
  """
  state: RoleState

  """
  Job held in this role
  """
  job: Job
}

enum RoleState {
  """
  Need more information from the admin to add this employee to the company.
  """
  INIT

  """
  Admin has entered all the required details for an employee to be added to the company/offer sent.
  """
  HIRED

  """
  Employee has accepted the offer but start date is in future
  """
  ACCEPTED

  """
  Employee's start date is in the past and offer has been sent or accepted.
  """
  ACTIVE
  TERMINATED
}

"""Employee's job definition"""
type Job {
  """
  is full time/contractor/etc
  """
  employmentType: EmploymentType
  exemptionType: ExemptionType

  """Job title"""
  title: String
  salaryUnit: JobSalaryUnit
  salaryPerUnit: Decimal
}

enum JobSalaryUnit {
  HOUR
  DAY
  WEEK
  MONTH
  YEAR
  PAY_PERIOD
}

enum ExemptionType {
  PROFESSIONAL_EMPLOYEE
  EXECUTIVE_EMPLOYEE
  ADMINISTRATIVE_EMPLOYEE
  COMPUTER_SOFTWARE_EMPLOYEE
  COMMISSIONED_SALESPERSON_EMPLOYEE
  NON_EXEMPT
  NOT_AVAILABLE
}

type CompanyTaxInfo {
  id: ID!
  ein: String!
}

type Address {
  streetLine1: String
  streetLine2: String
  zip: String
  city: String
  state: String
  country: String
}

type Mutation {
  """To be called by Truework to request employee consent to share their payroll/employment info for
  loan approval purpose"""
  requestEmployeeConsentByThirdParty(employeeId: ID!): ConsentState!
}

enum ConsentState {
  """Initial state, Truework can move it to PENDING by calling requestEmployeeConsentByThirdParty"""
  ASK

  """Not yet appoved - either will get autoapproved after 12 hours to APPROVED, or manually changed by the employee to APPROVED or DENIED"""
  PENDING

  """Employment info will be shared with Truework"""
  APPROVED

  """Employment info WILL NOT be shared with Truework"""
  DENIED
}

scalar Decimal

type PayrollCompensation {
  gross: Decimal
  net: Decimal
  base: Decimal
  bonus: Decimal
  commission: Decimal
  overtime: Decimal
  other: Decimal
}

type Paystub {
  payPeriodStartDate: Date
  payPeriodEndDate: Date
  gross: Decimal
  bonus: Decimal
  overtime: Decimal
  commission: Decimal
  other: Decimal
  payPeriodHours: Decimal
}
