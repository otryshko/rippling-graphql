type Query {
  """Truework: return information about an employee for loan validation 
  An array might contain multiple records, but with the same SSN"""
  employeesBySsn(ssn: String!): [Employee]
}

interface Node {
  id: ID!
}

interface NotifySubject {
  id: ID!
  dbId: String
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

"""Client company representation"""
type Company implements NotifySubject & Node {
  """Relay company id"""
  id: ID!
  dbId: String

  """Public company name"""
  name: String

  """Legal company name"""
  legalName: String

  """Doing-business-as name"""
  doingBusinessAsName: String


  """A list of sub-companies differentiated by EIN"""
  taxInfos: [TaxInfo!]!
  status: CompanyStatus

  """if DENIED, company info will not be exposed to Truework"""
  consent: ConsentState

  """Company work address"""
  address: Address
  hasHris: Boolean
  hasPayroll: Boolean
}

enum CompanyStatus {
  ACTIVE
  DEACTIVATION_REQUESTED
  INACTIVE
}

enum EmploymentType {
  CONTRACTOR
  SALARIED_FT
  SALARIED_PT
  HOURLY_FT
  HOURLY_PT
  TEMP
}

"""Employee record, logically matches a person"""
type Employee implements NotifySubject & Node {
  """Relay employee id"""
  id: ID!
  dbId: String

  """Goverment ID of the person"""
  ssn: String
  fullName: String
  firstName: String
  lastName: String

  """Date of birth"""
  dob: String
  email: String
  phone: String
  homeAddress: Address

  """An array of employment positions"""
  roles: [Role!]

  """Has an employee consented to share employment history with Truework"""
  consent: EmployeeConsent

  """List of companies and roles employee is/was employed at"""
  employmentHistory: [EmploymentHistoryRecord]
}

"""List of companies and roles employee is/was employed at"""
type EmploymentHistoryRecord {
  company: Company
  roles: [Role]
}

"""Payroll-related section of a role"""
type RolePayroll {
  """Yearly compensation for the last 3 years"""
  last3Years: [YearlyCompensation]

  """Paystubs for the year-to-date"""
  paystubs: [Paystub]
}

"""Yearly compensation"""
type YearlyCompensation {
  year: Int!
  compensation: PayrollCompensation
}

scalar DateTime

scalar Date

"""State of employee consent to share information with Truework"""
type EmployeeConsent {
  """state - see type definition for value"""
  state: ConsentState
  """is receiving information allowed"""
  isAllowed: Boolean

  """Used for autoapproval (+12 hours after the pending request)"""
  pendingStartedAt: DateTime
}

"""Employment position"""
type Role implements NotifySubject & Node {
  """Relay role id"""
  id: ID!
  dbId: String

  """Employment at this company"""
  company: Company
  employee: Employee

  """Payroll info related to this company and this employee"""
  payroll: RolePayroll
  startDate: Date
  endDate: Date

  """Is employee still active, see RoleState enum for reference"""
  state: RoleState

  """Job held in this role"""
  job: Job

  """sub-company role belongs to or the main company entry"""
  taxInfo: TaxInfo
}

enum RoleState {
  """Need more information from the admin to add this employee to the company."""
  INIT

  """Admin has entered all the required details for an employee to be added to the company/offer sent."""
  HIRED

  """Employee has accepted the offer but start date is in future"""
  ACCEPTED

  """Employee's start date is in the past and offer has been sent or accepted."""
  ACTIVE

  """Employee's role has been terminated"""
  TERMINATED
}

"""Employee's job definition"""
type Job {
  """is full time/contractor/etc"""
  employmentType: CompanyEmploymentType
  exemptionType: ExemptionType

  """Job title"""
  title: String
  salaryUnit: JobSalaryUnit
  salaryPerUnit: Decimal
}

type CompanyEmploymentType {
  isSalaried: Boolean
  isHourly: Boolean
  isTemporary: Boolean
  isPartTime: Boolean
  isFullTime: Boolean
  isContractor: Boolean
}

enum JobSalaryUnit {
  HOUR
  DAY
  WEEK
  MONTH
  YEAR
  PAY_PERIOD
}

enum ExemptionType {
  PROFESSIONAL_EMPLOYEE
  EXECUTIVE_EMPLOYEE
  ADMINISTRATIVE_EMPLOYEE
  COMPUTER_SOFTWARE_EMPLOYEE
  COMMISSIONED_SALESPERSON_EMPLOYEE
  NON_EXEMPT
  NOT_AVAILABLE
}

"""container for sub-companies information"""
type TaxInfo{
    id : ID!
    ein: String
    nameWithIrs: String,
    doingBusinessAsName: String,
    address: Address
}

type Address {
  streetLine1: String
  streetLine2: String
  zip: String
  city: String
  state: String
  country: String
}

"""describes a group of roles"""
type Group implements NotifySubject & Node {
  """relay group id"""
  id: ID!

  """internal db id"""
  dbId: String
}

scalar Void

type Mutation {
  """To be called by Truework to request employee consent to share their payroll/employment info for loan approval purpose"""
  requestEmployeeConsentByThirdParty(
    employeeId: ID!
    requestorName: String
  ): EmployeeConsent!
}

type AppInstall implements Node {
  id: ID!
  spokeOwner: SpokeOwner
  installState: AppInstallState
  installStartedBy: Role
  installFinishedBy: Role
}

enum AppInstallState {
  PARTIAL
  FINISH
}

type SpokeOwner implements Node {
  id: ID!
  spoke: Spoke!
}

type Spoke implements Node {
  id: ID!
  handle: String
}

enum ConsentState {
  """Initial state, Truework can move it to PENDING by calling requestEmployeeConsentByThirdParty"""
  ASK

  """Not yet appoved - either will get autoapproved after 12 hours to APPROVED, or manually changed by the employee to APPROVED or DENIED"""
  PENDING

  """Employment info will be shared with Truework"""
  APPROVED

  """Employment info WILL NOT be shared with Truework"""
  DENIED
}

"""The payload sent to webhook"""
type NotifyPayload {
  """type of the object the notification is about, only Employee is supported at the moment"""
  instanceType: String!

  """The object the notification is about"""
  instance: NotifySubject!

  """what has happened to that object"""
  action: NotifyAction

  """free-formed string with more details about notification action"""
  subAction: String
}

"""notification types"""
enum NotifyAction {
  """object was created"""
  CREATED

  """object was deleted"""
  DELETED

  """object was updated"""
  UPDATED

  """for role - role was hired"""
  HIRED

  """specific to role - role was terminated"""
  TERMINATED
}

scalar Decimal

type PayrollCompensation {
  gross: Decimal
  net: Decimal
  base: Decimal
  bonus: Decimal
  commission: Decimal
  overtime: Decimal
  other: Decimal
}

type Paystub {
  payPeriodStartDate: Date
  payPeriodEndDate: Date
  checkDate: Date
  gross: Decimal
  base: Decimal
  bonus: Decimal
  overtime: Decimal
  commission: Decimal
  other: Decimal
  payPeriodHours: Decimal
}
